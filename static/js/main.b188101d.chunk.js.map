{"version":3,"sources":["BaiTapBurger/Bill.js","BaiTapBurger/Beef.js","BaiTapBurger/Cheese.js","BaiTapBurger/Salad.js","BaiTapBurger/Burger.js","redux/types/BaiTapBurgerType.js","BaiTapBurger/Menu.js","redux/actions/BaiTapBurgerAction.js","BaiTapBurger/BaiTapBurger.js","App.js","reportWebVitals.js","redux/reducer/BaiTapBurgerReducer.js","redux/reducer/rootReducer.js","index.js"],"names":["Bill","renderRow","ingredient","quantity","props","billState","burger","toLocaleString","unitPrice","menu","amount","className","id","tabIndex","role","type","this","colSpan","total","Component","connect","state","burgerState","Beef","renderBeef","beefArray","index","beefQuantity","beef","push","Cheese","renderCheese","cheeseArray","cheeseQuantity","cheese","Salad","renderSalad","saladArray","saladQuantity","salad","Burger","RENDER_SALAD","RENDER_CHEESE","RENDER_BEEF","Menu","style","width","height","onClick","renderIngredient","totalAmount","dispatch","isAdded","renderIngredientAction","BaiTapBurger","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BaiTapBurgerReducer","action","alert","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b188101d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nclass Bill extends Component {\r\n    renderRow = (ingredient) => {\r\n        let quantity = this.props.billState.burger[ingredient].toLocaleString();\r\n        let unitPrice = this.props.billState.menu[ingredient].toLocaleString();\r\n        let amount = (quantity * unitPrice).toLocaleString();\r\n\r\n        return <tr className=\"table-bordered\">\r\n            <td>{ingredient}</td>\r\n            <td>{quantity}</td>\r\n            <td>{unitPrice}</td>\r\n            <td>{amount}</td>\r\n        </tr>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div className=\"modal fade\" id=\"modelId\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"modelTitleId\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\">Bill</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">×</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <table className=\"table text-left border\" >\r\n                                        <thead className=\"table-bordered\">\r\n                                            <tr>\r\n                                                <th>Thức ăn</th>\r\n                                                <th>Số lượng</th>\r\n                                                <th>Đơn giá</th>\r\n                                                <th>Thành tiền</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.renderRow('salad')}\r\n                                            {this.renderRow('cheese')}\r\n                                            {this.renderRow('beef')}\r\n                                            <tr>\r\n                                                <td colSpan={2}></td>\r\n                                                <td>Tổng tiền</td>\r\n                                                <td>{this.props.billState.total}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">OK</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        billState: state.burgerState\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Bill)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nclass Beef extends Component {\r\n    renderBeef = () => {\r\n        let beefArray = [];\r\n        for (let index = 0; index < this.props.beefQuantity; index++) {\r\n            let beef = <div key={index} className=\"beef\">\r\n            </div>\r\n            beefArray.push(beef);\r\n        }\r\n        return beefArray;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderBeef()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        beefQuantity: state.burgerState.burger.beef\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Beef)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nclass Cheese extends Component {\r\n    renderCheese = () => {\r\n        let cheeseArray = [];\r\n        for (let index = 0; index < this.props.cheeseQuantity; index++) {\r\n            let cheese = <div key={index} className=\"cheese\">\r\n            </div>\r\n            cheeseArray.push(cheese);\r\n        }\r\n        return cheeseArray;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderCheese()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cheeseQuantity: state.burgerState.burger.cheese\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Cheese)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Salad extends Component {\r\n    renderSalad = () => {\r\n        let saladArray = [];\r\n        for (let index = 0; index < this.props.saladQuantity; index++) {\r\n            let salad = <div key={index} className=\"salad\">\r\n            </div>\r\n            saladArray.push(salad);\r\n        }\r\n        return saladArray;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderSalad()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        saladQuantity: state.burgerState.burger.salad\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Salad)","import React, { Component } from 'react'\r\nimport Beef from './Beef'\r\nimport Cheese from './Cheese'\r\nimport Salad from './Salad'\r\n\r\nexport default class Burger extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-danger\">Bánh burger của bạn</h2>\r\n                <div className=\"breadTop\" />\r\n                <Salad />\r\n                <Cheese />\r\n                <Beef />\r\n                <div className=\"breadBottom\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export const RENDER_SALAD = 'RENDER_SALAD';\r\nexport const RENDER_CHEESE= 'RENDER_CHEESE';\r\nexport const RENDER_BEEF= 'RENDER_BEEF';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { renderIngredientAction } from '../redux/actions/BaiTapBurgerAction';\r\nimport { RENDER_SALAD, RENDER_CHEESE, RENDER_BEEF } from \"../redux/types/BaiTapBurgerType\";\r\n\r\nclass Menu extends Component {\r\n    renderRow = (ingredient, type) => {\r\n        let quantity = this.props[ingredient].toLocaleString();\r\n        let unitPrice = this.props.menu[ingredient].toLocaleString();\r\n        let amount = (quantity * unitPrice).toLocaleString();\r\n\r\n        return <tr>\r\n            <td>{ingredient}</td>\r\n            <td>\r\n                <button className=\"btn btn-success\" style={{ width: 38, height: 38 }}\r\n                    onClick={() => { this.props.renderIngredient(type, true) }}>+</button>\r\n                {` ${quantity} `}\r\n                <button className=\"btn btn-danger\" style={{ width: 38, height: 38 }}\r\n                    onClick={() => { this.props.renderIngredient(type, false) }}>-</button>\r\n            </td>\r\n            <td>{unitPrice}</td>\r\n            <td>{amount}</td>\r\n        </tr>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: 600 }}>\r\n                <h2 className=\"text-success\">Chọn thức ăn</h2>\r\n                <table className=\"table text-left\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Thức ăn</th>\r\n                            <th></th>\r\n                            <th>Đơn giá</th>\r\n                            <th>Thành tiền</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderRow('salad', RENDER_SALAD)}\r\n                        {this.renderRow('cheese', RENDER_CHEESE)}\r\n                        {this.renderRow('beef', RENDER_BEEF)}\r\n                        <tr>\r\n                            <td colSpan={2}></td>\r\n                            <td>Tổng tiền</td>\r\n                            <td>{this.props.totalAmount}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <button className=\"btn btn-primary float-right mr-5\" data-toggle=\"modal\" data-target=\"#modelId\">\r\n                    Thanh toán\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        salad: state.burgerState.burger.salad,\r\n        cheese: state.burgerState.burger.cheese,\r\n        beef: state.burgerState.burger.beef,\r\n        menu: state.burgerState.menu,\r\n        totalAmount: state.burgerState.total\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        renderIngredient: (type, isAdded) => {\r\n            dispatch(renderIngredientAction(type, isAdded))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu)\r\n","export const renderIngredientAction = (type, isAdded) => {\r\n    return  {\r\n          type:type,\r\n          isAdded\r\n      }\r\n  }\r\n\r\nexport const viewBillAction = (type) => {\r\n    return  {\r\n          type:type\r\n      }\r\n  }","import React, { Component } from 'react';\r\nimport './BaiTapBurger.css';\r\nimport Bill from './Bill';\r\nimport Burger from './Burger';\r\nimport Menu from './Menu';\r\n\r\nexport default class BaiTapBurger extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h1 className=\"text-success\">Bài tập burger Cybersoft</h1>\r\n                <div className=\"row text-center mt-5\">\r\n                    <div className=\"col-6\">\r\n                        <Burger />\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <Menu />\r\n                    </div>\r\n                </div>\r\n                <Bill />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// import './App.css';\nimport BaiTapBurger from './BaiTapBurger/BaiTapBurger';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BaiTapBurger />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { RENDER_SALAD, RENDER_CHEESE, RENDER_BEEF } from \"../types/BaiTapBurgerType\";\r\n\r\nconst burgerState = {\r\n    burger:\r\n    {\r\n        salad: 1,\r\n        cheese: 1,\r\n        beef: 1\r\n    },\r\n    menu: {\r\n        salad: 10,\r\n        cheese: 20,\r\n        beef: 55\r\n    },\r\n    total: 85,\r\n}\r\n\r\n\r\n\r\nconst BaiTapBurgerReducer = (state = burgerState, action) => {\r\n    switch (action.type) {\r\n        case RENDER_SALAD: {\r\n            if (action.isAdded) {\r\n                state.burger.salad += 1;\r\n                state.total = state.total + state.menu.salad;\r\n            } else {\r\n                if (state.burger.salad >= 1) {\r\n                    state.burger.salad -= 1;\r\n                    state.total = state.total - state.menu.salad;\r\n                } else {\r\n                    alert('No more salad to reduce.')\r\n                }\r\n            }\r\n\r\n            return { ...state }\r\n        }\r\n        case RENDER_CHEESE: {\r\n            if (action.isAdded) {\r\n                state.burger.cheese += 1;\r\n                state.total = state.total + state.menu.cheese;\r\n            } else {\r\n                if (state.burger.cheese >= 1) {\r\n                    state.burger.cheese -= 1;\r\n                    state.total = state.total - state.menu.cheese;\r\n                } else {\r\n                    alert('No more cheese to reduce.')\r\n                }\r\n            }\r\n\r\n            return { ...state }\r\n        }\r\n        case RENDER_BEEF: {\r\n            if (action.isAdded) {\r\n                state.burger.beef += 1;\r\n                state.total = state.total + state.menu.beef;\r\n            } else {\r\n                if (state.burger.beef >= 1) {\r\n                    state.burger.beef -= 1;\r\n                    state.total = state.total - state.menu.beef;\r\n                } else {\r\n                    alert('No more beef to reduce.')\r\n                }\r\n            }\r\n\r\n            return { ...state }\r\n        }\r\n        default: return { ...state }\r\n    }\r\n}\r\n\r\nexport default BaiTapBurgerReducer;","import { combineReducers } from 'redux';\r\nimport BaiTapBurgerReducer from './BaiTapBurgerReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    burgerState: BaiTapBurgerReducer\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//setup redux\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './redux/reducer/rootReducer';\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}